// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using N_To_N_With_AutoMapper.Data;

#nullable disable

namespace OneToN.Data.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20250820040119_AddingFeeds")]
    partial class AddingFeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("N_To_N_With_AutoMapper.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Limit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "123",
                            Balance = 500.00m,
                            Limit = 150.00m
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "222",
                            Balance = 100.00m,
                            Limit = 50.00m
                        });
                });

            modelBuilder.Entity("N_To_N_With_AutoMapper.Entities.AccountAddress", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("AccountAddresses");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AddressId = 1
                        },
                        new
                        {
                            AccountId = 1,
                            AddressId = 2
                        },
                        new
                        {
                            AccountId = 2,
                            AddressId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            AddressId = 2
                        },
                        new
                        {
                            AccountId = 2,
                            AddressId = 3
                        },
                        new
                        {
                            AccountId = 2,
                            AddressId = 4
                        });
                });

            modelBuilder.Entity("N_To_N_With_AutoMapper.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Auckland"
                        },
                        new
                        {
                            Id = 2,
                            City = "Hamilton"
                        },
                        new
                        {
                            Id = 3,
                            City = "Wellington"
                        },
                        new
                        {
                            Id = 4,
                            City = "Chirschurch"
                        });
                });

            modelBuilder.Entity("N_To_N_With_AutoMapper.Entities.AccountAddress", b =>
                {
                    b.HasOne("N_To_N_With_AutoMapper.Entities.Account", "Account")
                        .WithMany("AccountAddresses")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N_To_N_With_AutoMapper.Entities.Address", "Address")
                        .WithMany("AccountAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("N_To_N_With_AutoMapper.Entities.Account", b =>
                {
                    b.Navigation("AccountAddresses");
                });

            modelBuilder.Entity("N_To_N_With_AutoMapper.Entities.Address", b =>
                {
                    b.Navigation("AccountAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
